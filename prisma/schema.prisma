generator client {
  provider = "prisma-client-js"
}


// MONGODB
//datasource db {
//  provider = "mongodb"
//  url      = env("DATABASE_URL")
//}

// POSTGRESQL
datasource db {
  provider = "postgresql"
  url      = env("POST_URL")
}

model notes {

  // postgresql ->
  id Int @id @default(autoincrement())
  userId Int

  // mongodb ->
  //id String @id @default(auto()) @map("_id") @db.ObjectId
  //userId String?

  noteText String?
  createdAt DateTime? @default(now()) 
  updatedAt DateTime? @default(now())
}


model users {

  // postgresql ->
  id     Int    @id @default(autoincrement())

  // mongodb ->
  //id      String   @id @default(auto()) @map("_id") @db.ObjectId

  email   String   @unique
  name    String?
  password String?
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now())

  boards    userBoard[]
}

model boards {

  // postgresql ->
  id     Int    @id @default(autoincrement())

  // mongodb ->
  //id      String   @id @default(auto()) @map("_id") @db.ObjectId

  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())

  members     userBoard[]
}

model userBoard {
  //id        Int      @id @default(autoincrement())
  userId    Int
  boardId   Int
  createdAt DateTime @default(now())

  // Define foreign key constraints
  @@unique([userId, boardId])
  @@index([userId])
  @@index([boardId])

  // Define relationships
  user      users     @relation(fields: [userId], references: [id])
  board     boards    @relation(fields: [boardId], references: [id])
}
